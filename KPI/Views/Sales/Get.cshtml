@using KPI.Classes;
@model KPILib.Models.SalesMaster
@{
    ViewBag.Title = "Sales Order - Edit";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div class="top_header">
    <h2>@ViewBag.Title</h2>
    <div class="back_btn">
        @Html.ActionLink("Back to List", "GetAll")
    </div>
</div>
@using (Html.BeginForm("Edit", "Sales"))
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-md-6">

            <div class="row">

                <div class="col-md-4 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SalesID, htmlAttributes: new { @class = "control-label col-md-12" })
                        @Html.DisplayFor(model => model.SalesID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.SalesID)
                        @*@Html.ValidationMessageFor(model => model.SalesDate, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="col-md-4 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SalesDate, htmlAttributes: new { @class = "control-label col-md-12" })
                        @Html.DisplayFor(model => model.SalesDate, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.EditorFor(model => model.SalesDate, new { htmlAttributes = new { @class = "form-control datepicker", @disabled = "disabled" }, type = "date" })*@
                        @*@Html.ValidationMessageFor(model => model.SalesDate, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="col-md-4 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-12" })
                        @Html.DisplayFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })*@
                        @*@Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="col-md-2 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-12" })
                        @Html.DisplayFor(model => model.User, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.EditorFor(model => model.User, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })*@
                        @*@Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="col-md-3 col-sm-12">
                    <div class="form-group">
                        <label class="control-label col-md-12">Customer / Location</label>
                        @*@Html.DisplayFor(model => model.CompanyLocation, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.CompanyLocationID, null, "--Select Company and Location--", new { @class = "form-control", style = "max-width:100%;", @disabled = "disabled" })
                        @*@Html.ValidationMessageFor(model => model.CompanyLocationID, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="col-md-7 col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Instructions, htmlAttributes: new { @class = "control-label col-md-12" })

                        @*@Html.DisplayFor(model => model.Instructions, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.TextAreaFor(model => model.Instructions, new { htmlAttributes = new { @class = "form-control" }, @rows = 6, @cols = 1000, style = "max-width:100%;", @disabled = "disabled" })
                        @*@Html.ValidationMessageFor(model => model.Instructions, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                @if (Model.IsSalesRateAccess)
                {
                    <div class="col-md-4 col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-12" })
                            @Html.TextBoxFor(model => model.Rate, "", new { @class = "form-control", @placeholder = "Enter Rate" })
                            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="col-md-6">

            <div class="top_header">
                <h2>Line Items</h2>

                <!--<div class="col-md-6 text-right">-->
                @*<input type="button" value="Add Line Item" class="btn btn-primary  btn-sm" />*@
                <!--</div>-->
                <div class="">
                    <input type="button" value="Add Line Item" class="btn btn-primary btn-sm" onclick="AddLineItemRow()" />
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-bordered" id="SalesOrderTbl">
                    <thead>
                        <tr>
                            @*<th>
                                    Sales Detail ID
                                </th>*@
                            <th>
                                Raw Material
                            </th>
                            <th>
                                Qty
                            </th>
                            <th>
                                Instructions
                            </th>
                            <th>
                                Action
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.LineItems)
                        {
                            Html.RenderAction("GetSalesLineItemPartial", item);

                            <!--<tr>
                            <td width="70px">-->
                            @*@Html.ImageActionLink("", "GetSalesDetail", "Sales", new { id = item.SalesDetailsID }, null, "~/images/edit.png")
                                @Html.ImageActionLink("", "GetSalesDetail", "Sales", null, null, "~/images/garbage.png")*@
                            <!--</td>-->
                            @*<td>
                                    @Html.DisplayFor(modelItem => item.SalesDetailsID)
                                </td>*@
                            <!--<td>-->
                            @*                                @Html.DisplayFor(modelItem => item.RawMatarialName)*@
                            <!--</td>
                            <td>-->
                            @*                              @Html.DisplayFor(modelItem => item.Qty)*@
                            <!--</td>
                            </tr>-->
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />

    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    function AddLineItemRow() {

        var strURL = "/Sales/GetSalesLineItemPartial";
        var selector = "#SalesOrderTbl tbody";
        AddLineItemRowGeneric(strURL, "GET", selector);
    };
</script>