@model KPILib.Models.Mould

@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@*<h2>New</h2>*@

<div class="">

    <div class="container">
        @using (Html.BeginForm("Add", "Mould"))
        {
            @Html.AntiForgeryToken()

            <div class="row" id="HiddenMouldId">
                <span class="RoleId">@Html.HiddenFor(Model => Model.MouldID)</span>
            </div>

            <h4>Mould</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.MouldName, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.MouldName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MouldName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.MouldTypeID, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.DropDownListFor(model => model.MouldTypeID, null, "--Select--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MouldTypeID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TotalCavities, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.TotalCavities, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TotalCavities, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RunningCavities, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.RunningCavities, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RunningCavities, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CorePins, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.CorePins, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CorePins, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsDiscontinued, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsDiscontinued)
                                    @Html.ValidationMessageFor(model => model.IsDiscontinued, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12">
                <div class="row">
                    <label>&nbsp;</label>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            </div>

        }

    </div>
</div>

<div class="col-md-12">
    <div class="row">
        <label>&nbsp;</label>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back to List", "GetAll")
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
