@using KPI.Classes;
@model IEnumerable<KPILib.Models.RawMaterial>

@{
    ViewBag.Title = "Raw Materials";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<script>
    $(document).ready(function () {
        $.noConflict();
        var table = $('#tblData').DataTable({
            "scrollCollapse": false,
            "paging": true,
            select: false,
            data: @Html.Raw(Json.Encode(Model)),
            columns: [
                {
                    data: null, title: "Raw Material Name",
                    render: function (data, type, row) {
                        return "<a href='Get/" + data.RawMaterialID + "'>" + data.RawMaterialName + "</a>";
                    }
                },
                { data: "Description", title: "Description" },
                /*{ data: "UOM", title: "UOM" },*/
                /*{ data: "IsDiscontinued", title: "Discontinued?" },*/
                {
                    data: null, title: "In Stock (Kgs)",
                    render: function (data, type, row) {
                        return "<a href='../Pallet/GetAllByRMID/" + data.RawMaterialID + "'>" + data.InStock + "</a>";
                    }
                },
                { data: "Reserved", title: "Reserved (Kgs)", "sType": "int" },
                { data: "SupplierDetails", title: "Supplier Details", "sType": "string" },
                /*{ data: "Ordered", title: "Ordered", "sType": "int" },*/
                {
                    data: null, title: "Ordered (Kgs)",
                    render: function (data, type, row) {
                        return "<a href='../Purchase/GetAllByRMID/" + data.RawMaterialID + "'>" + data.Ordered + "</a>";
                    }
                },
                { data: "Short", title: "Short (Kgs)", "sType": "int" },
            //    { data: "LoanedOut", title: "Loaned Out", "sType": "int" },
            //    { data: "LoanedIn", title: "Loaned In", "sType": "int" }
            ]
        });
    });
</script>

<h2>@ViewBag.Title</h2>

@Html.ActionLink("Add New", "New", new { area = "" }, new { @class = "btn btn-primary" })

<table id="tblData" class="table table-sm table-striped" cellspacing="0" width="100%">
</table>

@*<table class="table">
    <tr>
        <th>
        </th>
        <th>
                @Html.DisplayNameFor(model => model.RawMatarialID)
            </th>
        <th>
            @Html.DisplayNameFor(model => model.RawMaterialName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
                @Html.DisplayNameFor(model => model.UOMID)
            </th>
        <th>
            @Html.DisplayNameFor(model => model.UOM)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsDiscontinued)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.InStock)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Reserved)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Short)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ordered)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LoanedOut)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LoanedIn)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td width="70px">
                @Html.ImageActionLink("", "Get", "RawMaterial", new { id = item.RawMaterialID }, null, "~/images/edit.png")
                @Html.ImageActionLink("", "GetAll", "RawMaterial", null, null, "~/images/garbage.png")
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.RawMatarialID)
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.RawMaterialName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.UOMID)
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.UOM)
            </td>
            <td>
                @(item.IsDiscontinued == true ? "Discontinued" : "Active")
            </td>

            <td>
                @Html.ActionLink(item.InStock.ToString(), "GetAllByRM", "RMInventory", new { @id = item.RawMaterialID }, new { })
                @Html.ActionLink(item.InStock.ToString(), "GetAllByRMID", "Pallet", new { @id = item.RawMaterialID }, new { })
                @Html.DisplayFor(modelItem => item.InStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reserved)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Short)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ordered)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoanedOut)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoanedIn)
            </td>

        </tr>
    }

</table>*@
