@using System.Collections.Generic;
@model KPILib.Models.RawMaterial

@{
    ViewBag.Title = "Raw Material - New";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<h2>@ViewBag.Title</h2>
<div>
    @Html.ActionLink("Back to List", "GetAll")
</div>

<div class="form-horizontal">

    @using (Html.BeginForm("Add", "RawMaterial"))
    {
        @Html.AntiForgeryToken()
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="col-md-12">
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.RawMaterialName, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.EditorFor(model => model.RawMaterialName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Raw Material Name" } })
                        @Html.ValidationMessageFor(model => model.RawMaterialName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Description" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.VendorId, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.DropDownListFor(model => model.VendorId, null, "--Select--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.UOMID, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.DropDownListFor(model => model.UOMID, ViewBag.UOMs as SelectList, "--Select Unit of Measurement--", new { @class = "form-control" })
                        @*//@Html.DropDownListFor(model => model.UOMID, new SelectList(Enum.GetValues(typeof(model.UOMs)), "Select Units of Measurement")   // new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.UOMID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.IsDiscontinued, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsDiscontinued)
                            @Html.ValidationMessageFor(model => model.IsDiscontinued, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-3">
                    <label>&nbsp;</label>
                    <div class="">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        <input type="button" value="Back" class="btn btn-danger" onclick="window.location.href='/RawMaterial/GetAll'"/>
                    </div>
                </div>
            </div>
        </div>

    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
