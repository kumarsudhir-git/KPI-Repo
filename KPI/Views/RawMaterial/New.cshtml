@using System.Collections.Generic;
@model KPILib.Models.RawMaterial

@{
    ViewBag.Title = "Raw Material - New";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
<div class="top_header">
    <h2>@ViewBag.Title</h2>
    <div class="back_btn">
        @Html.ActionLink("Back to List", "GetAll")
    </div>
</div>
@using (Html.BeginForm("Add", "RawMaterial"))
{
    @Html.AntiForgeryToken()

    <div class="col-md-12">
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="col-md-3 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.RawMaterialName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.RawMaterialName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RawMaterialName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.RMGrade, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.RMGrade, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RMGrade, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.VendorId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.VendorId, null, "--Select--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.UOMID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.UOMID, ViewBag.UOMs as SelectList, "--Select Unit of Measurement--", new { @class = "form-control" })
                    @*//@Html.DropDownListFor(model => model.UOMID, new SelectList(Enum.GetValues(typeof(model.UOMs)), "Select Units of Measurement")   // new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.UOMID, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>

    <div class="col-md-12">
        <div class="row">
            <div class="col-md-3 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.IsDiscontinued, htmlAttributes: new { @class = "control-label" })
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsDiscontinued)
                        @Html.ValidationMessageFor(model => model.IsDiscontinued, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class=" col-md-12">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
