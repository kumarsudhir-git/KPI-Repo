@model KPILib.Models.PalletMaster

@{
    ViewBag.Title = "Pallet - New";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
<div class="top_header">
    <h2>@ViewBag.Title</h2>
    <div class="back_btn">
        @Html.ActionLink("Back to List", "GetAll")
    </div>
</div>

@using (Html.BeginForm("Add", "Pallet"))
{
    @Html.AntiForgeryToken()

    <div class="row">
         
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.PalletNo, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.PalletNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PalletNo, "", new { @class = "text-danger" })
            </div>
        </div>

         <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label  " })

                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.IsDiscontinued, htmlAttributes: new { @class = "control-label   " })

                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDiscontinued)
                    @Html.ValidationMessageFor(model => model.IsDiscontinued, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.AddedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AddedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastModifiedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastModifiedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastModifiedOn, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
