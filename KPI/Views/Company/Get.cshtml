@model KPILib.Models.Company

@{
    ViewBag.Title = "Company - Edit";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div class="top_header">
    <h2>@ViewBag.Title</h2>
    <div class="back_btn">
        @Html.ActionLink("Back to List", "GetAll", "Company", new { id = Model.CompanyTypeID })
    </div>
</div>

@using (Html.BeginForm("Edit", "Company"))
{
    @Html.AntiForgeryToken()

    <div class="row">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CompanyID)

            <div class="col-md-3 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="col-md-3 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })<br/>
                @Html.TextAreaFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="col-md-3 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.IsDiscontinued, htmlAttributes: new { @class = "control-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDiscontinued)
                    @Html.ValidationMessageFor(model => model.IsDiscontinued, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.AddedOn, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-3 col-sm-12">
                @Html.EditorFor(model => model.AddedOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddedOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastModifiedOn, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-3 col-sm-12">
                @Html.EditorFor(model => model.LastModifiedOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastModifiedOn, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group"> 
                <input type="submit" value="Save" class="btn btn-primary" />
            
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
