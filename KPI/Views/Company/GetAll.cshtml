@using KPI.Classes;
@model IEnumerable<KPILib.Models.Company>

@{
    ViewBag.Title = ViewBag.Type;        //"Companies";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<script>
    $(document).ready(function () {
        $.noConflict();
        var table = $('#tblData').DataTable({
            "scrollCollapse": false,
            "paging": true,
            select: false,
            data: @Html.Raw(Json.Encode(Model)),
            columns: [
                {
                    data: null, title: "Company Name [Locations]",
                    render: function (data, type, row) {
                        return "<a href='/Company/Get/" + data.CompanyID + "'>" + data.CompanyName + "</a> &nbsp; [<a href='/CompanyLocation/GetAll/" + data.CompanyID + "'>" + data.LocationCount + "</a>]";
                    }
                },
                { data: "CompanyAddress", title: "Address" },
                { data: "CompanyPhone", title: "Address" },
                { data: "CompanyGST", title: "GST No" }
            ]
        });
    });
</script>

<div class="top_header">
    <h2>Company</h2>

    @Html.ActionLink("Add New", "New", new { id = ViewBag.TypeID }, new { @class = "btn btn-primary" })
</div>
<div class="table-responsive">
    <table id="tblData" class="table table-sm table-striped" cellspacing="0" width="100%">
    </table>
</div>

@*<table class="table">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.CompanyName)
        </th>
        <th>
                @Html.DisplayNameFor(model => model.Notes)
            </th>
        <th>
            @Html.DisplayNameFor(model => model.IsDiscontinued)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LocationCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompanyTypes)
        </th>
        <th>
                @Html.DisplayNameFor(model => model.AddedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastModifiedOn)
            </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td width="70px">
                @Html.ImageActionLink("", "Get", "Company", new { id = item.CompanyID }, null, "~/images/edit.png")
                @Html.ImageActionLink("", "GetAll", "Company", null, null, "~/images/garbage.png")
            </td>
            <td>
                @Html.ActionLink(item.CompanyName, "GetAll", "CompanyLocation", new { id = item.CompanyID }, new { })
                @Html.DisplayFor(modelItem => item.CompanyName)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsDiscontinued)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LocationCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompanyTypes)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.AddedOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastModifiedOn)
                </td>
        </tr>
    }

</table>*@
