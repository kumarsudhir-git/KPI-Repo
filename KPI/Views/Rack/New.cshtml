@model KPILib.Models.RackMaster

@{
    ViewBag.Title = "Rack - New";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
<div class="top_header">
    <h2>@ViewBag.Title</h2>
    <div class="back_btn">
        @Html.ActionLink("Back to List", "GetAll")
    </div>
</div>
@using (Html.BeginForm("Add", "Rack"))
{
    @Html.AntiForgeryToken()
     
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row"> 
                <div class="col-sm-12 col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RackNo, htmlAttributes: new { @class = "control-label " })
                        <div class="col-md-11">
                            @Html.EditorFor(model => model.RackNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RackNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-12 col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                        <div class="col-md-11">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-12 col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label  " })
                        <div class="col-md-11">
                            @Html.DropDownListFor(model => model.LocationId, null, "--Select--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-12 col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsDiscontinued, htmlAttributes: new { @class = "control-label  justify-content-end" })
                        <div class="col-md-11">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsDiscontinued)
                                @Html.ValidationMessageFor(model => model.IsDiscontinued, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div> 

        @*<div class="form-group">
                @Html.LabelFor(model => model.AddedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AddedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastModifiedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastModifiedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastModifiedOn, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="row">
            <div class="form-group">
                <div class=" col-md-12">
                    <input type="submit" value="Create" class="btn btn-dark" />
                </div>
            </div>
        </div>

  
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
