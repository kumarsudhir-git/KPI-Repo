@*@using KPI.Classes;*@
@using HtmlHelpers.BeginCollectionItem;
@model KPILib.Models.ProductRawMaterialMapping

<tr>
    @using (Html.BeginCollectionItem("productRawMaterialMappings"))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductID)

        <td>
            @*@Html.LabelFor(model => model.RawMaterialID, htmlAttributes: new { @class = "control-label" })<br />*@
            @Html.DropDownListFor(model => model.RawMaterialID, ViewBag.RawMaterials as SelectList, "--Select Raw Material--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RawMaterialID, "", new { @class = "text-danger" })
        </td>
        <td>
            @*@Html.LabelFor(model => model.RMReqdForUOMQty, htmlAttributes: new { @class = "control-label" })<br />*@
            @Html.EditorFor(model => model.RMReqdForUOMQty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RMReqdForUOMQty, "", new { @class = "text-danger" })
        </td>
        <!--<td>-->
            @*@Html.LabelFor(model => model.UnitType, htmlAttributes: new { @class = "control-label" })<br />*@
            <!--@Html.DropDownListFor(model => model.UnitType, ViewBag.UnitMaster as SelectList, "--Select Unit--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UnitType, "", new { @class = "text-danger" })
        </td>-->
        <td>
            <input type="button" value="Delete" class="btn btn-primary btn-sm" onclick="DeleteLineItemRow(this)" />
        </td>
    }
</tr>

