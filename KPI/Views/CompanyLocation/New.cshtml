@model KPILib.Models.CompanyLocation

@{
    //ViewBag.Title = "New";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
<div class="top_header">
    <h2>@ViewBag.Comp</h2>
</div>

@using (Html.BeginForm("Add", "CompanyLocation"))
{
    @Html.AntiForgeryToken()

    <h4>Edit Location</h4>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*@Html.HiddenFor(model => model.CompanyLocationID)*@
    @Html.HiddenFor(model => model.CompanyID)

    @*<div class="form-group">
                    @Html.
        <div class="form-horizontal">LabelFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CompanyID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                    </div>
                </div>*@


    <div class="row">
        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.LocationName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.PAN, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.PAN, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.PAN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.GSTN, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.GSTN, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.GSTN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-3 col-sm-12" })
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", style = "max-width:98%" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-3 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.IsDiscontinued, htmlAttributes: new { @class = "control-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDiscontinued)
                    @Html.ValidationMessageFor(model => model.IsDiscontinued, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>




        @*<div class="form-group">
                @Html.LabelFor(model => model.CompanyTypeIDs, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CompanyTypeIDs, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CompanyTypeIDs, "", new { @class = "text-danger" })
                </div>
            </div>*@


        @*<div class="form-group">
                @Html.LabelFor(model => model.AddedOn, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AddedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastModifiedOn, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastModifiedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastModifiedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TypeOfCompany, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TypeOfCompany, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypeOfCompany, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "GetAll", new { id = Model.CompanyID }, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "GetAll/" + Model.CompanyID, "CompanyLocation")
</div>*@
